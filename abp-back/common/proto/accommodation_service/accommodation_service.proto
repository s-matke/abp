syntax = "proto3";

option go_package = "github.com/s-matke/abp/abp-back/common/accommodation";

package accommodation;

import "google/api/annotations.proto";

import "google/protobuf/timestamp.proto";

service AccommodationService {
    rpc Get(GetRequest) returns(GetResponse) {
        option (google.api.http) = {
            get: "/accommodation/{id}"
        };
    }

    rpc GetAll(GetAllRequest) returns(GetAllResponse) {
        option (google.api.http) = {
            get: "/accommodation"
        };
    }

    rpc CreateAccommodation(CreateAccommodationRequest) returns(CreateAccommodationResponse) {
        option (google.api.http) = {
            post: "/accommodation"
            body: "accommodation"
        };
    }

    rpc Search(SearchRequest) returns(SearchResponse) {
        option (google.api.http) = {
            post: "/search"
            body: "*"
        };
    }

    rpc GetByHost(GetByHostRequest) returns(GetByHostResponse) {
        option (google.api.http) = {
            get: "/accommodation/host/{id}"
        };
    }
}

message GetByHostRequest {
    string id = 1;
}

message GetByHostResponse {
    repeated Accommodation accommodations = 1;
}

message SearchRequest {
    Location location = 1;
    int32 numOfPeople = 2;
    google.protobuf.Timestamp startDate = 3;
    google.protobuf.Timestamp endDate = 4;
}

message SearchResponse {
    repeated AccommodationPricing accommodations = 1;
}

message GetRequest {
    string id = 1;
}

message GetResponse {
    Accommodation accommodation = 1;
}

message GetAllRequest {
}

message GetAllResponse {
    repeated Accommodation accommodations = 1;
}

message CreateAccommodationRequest {
    NewAccommodation accommodation = 1;
}

message CreateAccommodationResponse {
    Accommodation accommodation = 1;
}

message Accommodation {
    string id = 1;
    string host_id = 2;
    string name = 3;
    Location location = 4;
    repeated Utility utilities  = 5;
    repeated string images = 6;
    int32 minPeople = 7;
    int32 maxPeople = 8;
    bool automaticReservation = 9;
}

message AccommodationPricing {
    string id = 1;
    string host_id = 2;
    string name = 3;
    Location location = 4;
    repeated Utility utilities  = 5;
    repeated string images = 6;
    int32 minPeople = 7;
    int32 maxPeople = 8;
    bool automaticReservation = 9;
    float price = 10;
}

message NewAccommodation {
    string host_id = 1;
    string name = 2;
    Location location = 3;
    repeated Utility utilities  = 4;
    repeated string images = 5;
    int32 minPeople = 6;
    int32 maxPeople = 7;
    bool automaticReservation = 8;
}

message Location {
    string address = 1;
    string city = 2;
    string country = 3;
}

message Utility {
    string name = 1;
    string description = 2;
    // string icon = 3
}